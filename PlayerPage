# Sarah Wade

from tkinter import *
from functools import partial  # to prevent unwanted windows
import tkinter as tk
from tkinter import ttk

"""Opens up a screen with entry box to allow for user input.
   Help function links to Help class, team function links to team class. Save_names function appends information to list"""


class GamePlay(tk.Tk):
    def __init__(self):
        tk.Tk.__init__(self)
        self._frame = None
        self.switch_frame(StartPage)

    def switch_frame(self, frame_class):
        """Destroys current frame and replaces it with a new one."""
        new_frame = frame_class(self)
        if self._frame is not None:
            self._frame.destroy()
        self._frame = new_frame
        self._frame.pack()


class StartPage(tk.Frame):
    def __init__(self, partner):
        tk.Frame.__init__(self, partner, bg="#90EE90")
        background_color = "#90EE90"
        tk.Label(self, text="Selection Page", font="Garamond 34 bold", bg=background_color, height=10, pady=15, padx=15).pack(side="top", fill="x", pady=10)
        tk.Button(self, text="Player", padx=10, pady=10, width=20,
                  command=lambda: partner.switch_frame(EnterList)).pack()


class EnterList(tk.Frame):
    def __init__(self, partner):
        tk.Frame.__init__(self, bg="#90EE90")
        # Formatting variables
        background_color = "#90EE90"

        # Game Play Heading (Row 0)
        tk.Label(self,
                 text="Game Play",
                 font=("Arial", "16", "bold"),
                 bg=background_color,
                 padx=10, pady=10).pack()

        # User instructions(row 1)
        tk.Label(self,
                                        text="Enter your name:",
                                        font=("Arial", "14"),
                                        justify=LEFT,
                                        padx=10, pady=10, bg=background_color).pack()

        # Player name entry box
        """self.entryBox = Entry(self, width=20, font="Arial 14 bold").pack()
        print(self.entryBox)"""
        #self.entryBox.pack()

        self.entryBox = Entry(self, width=20,
                           font="Arial 14 bold")
        self.entryBox.pack()

        tk.Button(self, text="Submit", font="Arial 10 bold", padx=10, pady=10, width=15,
                  command=lambda: self.save_names()).pack()

        tk.Button(self, text="Clear text", font="Arial 10 bold", padx=10, pady=10, width=15,
                  command=self.clear_text, highlightbackground='purple').pack()

        # label will display when values have been added
        self.entered_label = tk.Label(self, font="Arial 14 bold", fg="purple", bg=background_color, pady=10, text="--")
        self.entered_label.pack()

        # Initialising list to hold player information
        self.player_info_list = []

        team_list_button = tk.Button(self, font="Arial 12 bold", text="Team List", width=15, padx=5, pady=5,
                                     command=lambda: partner.switch_frame(Team))
                                     #command=lambda: self.team(self.player_info_list))
        team_list_button.pack()

        tk.Button(self, text="Help",  font="Arial 12 bold", width=15, padx=5, pady=5,
                  command=lambda: partner.switch_frame(Help)).pack()

        tk.Button(self, font="Arial 12 bold", text="Back", width=15, padx=5, pady=5,
                  command=lambda: partner.switch_frame(StartPage)).pack()

    def save_names(self):
        name = self.entryBox.get()
        print(name)
        self.player_info_list.append(name)
        print(self.player_info_list)
        self.entered_label.configure(text=name, fg="blue")

    def clear_text(self):
        self.entryBox.delete(0, 'end')

    def team(self, team_list):
        Team(self, team_list)


class Team(tk.Frame):
    def __init__(self, partner):
        tk.Frame.__init__(self, partner, bg="#a9ef99")
        background = "#a9ef99"

        # Set up team name heading
        tk.Label(self, text="PNGHS 2022 Football Team",
                 font="Arial 19 bold", bg=background).pack()

        # team text
        tk.Label(self, text="List of team players:",
                 font="arial 10 italic", justify=LEFT, bg=background,
                 fg="maroon", padx=10, pady=10).pack()

        # team text
        team_text = tk.Label(self, text="",
                             justify=LEFT, width=40, bg=background)
        team_text.pack()

        # team output

        # Generate string from list of calculations
        team_string = "test"

        team_list = []
        print(team_list)

        if len(team_list) >= 14:
            for item in range(0, 14):
                #team_string += team_history[len(team_history) - item - 1] + "\n"
                team_string = team_list[-1]

        else:
            for item in team_list:
                #team_string = team_history[len(team_history) - team_history.index(item)-1] + "\n
                team_string = team_list[-1]
        print(team_list)


        # Label to display calculation history to user
        tk.Label(self, text=team_string, bg=background, font="Arial 12", justify=LEFT).pack()

        # Export button
        tk.Button(self, text="Export", padx=10, pady=10,
                  command=lambda: partner.switch_frame(ExportPlayersInput)).pack()
                    # command=lambda: partner.switch_frame(FuturePage)).pack()

        tk.Button(self, text="Back", padx=10, pady=10,
                  command=lambda: partner.switch_frame(EnterList)).pack()



class Help(tk.Frame):
    def __init__(self, partner):
        background = "orange"
        tk.Frame.__init__(self, partner, bg=background)

        # set up Help heading (row 0)
        tk.Label(self, text="Help / Instructions",
                                 font="arial 14 bold", bg=background).pack()

        # Help Text (label, row 1)
        tk.Label(self, text="Enter your player name and number to log in :)",
                               justify=LEFT, width=40, bg=background).pack()

        tk.Button(self, text="Back", padx=10, pady=10,
                  command=lambda: partner.switch_frame(EnterList)).pack()


class ExportPlayersInput(tk.Frame):
    def __init__(self, partner):
        background = "#a9ef99"
        tk.Frame.__init__(self, partner, bg=background)

        tk.Label(self, text="This page is currently not working", bg=background, font="Arial 12", justify=LEFT).pack()
        tk.Button(self, text="Go Back", padx=10, pady=10,
                  command=lambda: partner.switch_frame(Team)).pack()




if __name__ == "__main__":
    gameplay = GamePlay()
    gameplay.geometry("500x900")
    gameplay.config(background="#90EE90")
    gameplay.title("GamePlay")
    gameplay.mainloop()
