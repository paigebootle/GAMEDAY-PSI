# Sarah Wade, 16th October - finished the list on export page

# https://stackoverflow.com/questions/7546050/switch-between-two-frames-in-tkinter
import tkinter as tk
from tkinter import *
from tkinter import messagebox
from tkinter import ttk


class GamePlay(tk.Tk):
    def __init__(self):
        tk.Tk.__init__(self)
        self._frame = None
        self.switch_frame(StartPage)

    def switch_frame(self, frame_class):
        """Destroys current frame and replaces it with a new one."""
        new_frame = frame_class(self)
        if self._frame is not None:
            self._frame.destroy()
        self._frame = new_frame
        self._frame.pack()


class StartPage(tk.Frame):
    def __init__(self, partner):
        tk.Frame.__init__(self, partner)
        tk.Label(self, text="Selection Page", font="arial 20 bold").pack(side="top", fill="x", pady=10)
        tk.Button(self, text="Coach", padx=10, pady=10,
                  command=lambda: partner.switch_frame(CoachPage)).pack()
        tk.Button(self, text="Player", padx=10, pady=10,
                  command=lambda: partner.switch_frame(PlayerPage)).pack()


class CoachPage(tk.Frame):
    def __init__(self, partner):
        tk.Frame.__init__(self, partner)
        tk.Label(self, text="Coach Screen", font="arial 20 bold").pack(side="top", fill="x", pady=10)
        tk.Button(self, text="Return to start page", padx=10, pady=10,
                  command=lambda: partner.switch_frame(StartPage)).pack()

        tk.Button(self, text="Pre-Set Players", padx=10, pady=10,
                  command=lambda: partner.switch_frame(PreSetNames)).pack()


class PlayerPage(tk.Frame):
    def __init__(self, partner):
        tk.Frame.__init__(self, partner)
        tk.Label(self, text="Player Screen", font="arial 20 bold").pack(side="top", fill="x", pady=10)
        tk.Button(self, text="Return to start page", pady=10, padx=10,
                  command=lambda: partner.switch_frame(StartPage)).pack()


class PreSetNames(tk.Frame):
    def __init__(self, partner):
        tk.Frame.__init__(self, partner)

        def players():
            player_names["values"] = ["Sarah Wade", "Georgie Furnell", "Maire", "Jordan Campbell", "Chloe Mattock", "Ella Johns", "Stevie Bos", "Anisha Bowyer", "Bella Ives", "Penny Lovegrove", "Lucea Bedford", "Anne Moores", "Ruby", "Paige Bootle", "Georgia Tindle", "Natalia", "Brooke"]

        player_names = ttk.Combobox(values=["Sarah Wade", "Georgie Furnell", "Maire", "Jordan Campbell", "Chloe Mattock", "Ella Johns", "Stevie Bos", "Anisha Bowyer", "Bella Ives", "Penny Lovegrove", "Lucea Bedford", "Anne Moores", "Ruby", "Paige Bootle", "Georgia Tindle", "Natalia", "Brooke"],
                                    postcommand=players)

        # background_color = "#a9ef99"  # pale green
        background_color = "#00cc00"

        # coach page frame
        self.coach_page_frame = tk.Frame(background=background_color, pady=10,
                                         padx=10)
        self.coach_page_frame.pack()

        # coach page heading (row 0)
        self.coach_page_label = Label(self.coach_page_frame, text="Coach Page",
                                      font="Arial 20 bold", padx=5, pady=5, bg=background_color)
        self.coach_page_label.grid(row=0)


        self.field_frame = tk.Frame(self.coach_page_frame, bg=background_color, highlightbackground="white",
                                    highlightthickness=5, padx=0, pady=0)
        self.field_frame.grid(row=1)

        self.draw_field1 = tk.Frame(self.field_frame, padx=10, pady=10, bg=background_color)
        self.draw_field1.grid(row=2, column=1)

        self.select_pos2 = tk.StringVar(value='-')
        self.left1_dropdown = ttk.Combobox(self.draw_field1,
                                          values=["Sarah Wade", "Georgie Furnell", "Maire", "Jordan Campbell", "Chloe Mattock", "Ella Johns", "Stevie Bos", "Anisha Bowyer", "Bella Ives", "Penny Lovegrove", "Lucea Bedford", "Anne Moores", "Ruby", "Paige Bootle", "Georgia Tindle", "Natalia", "Brooke"],
                                          postcommand=players, state="readonly", width=10, textvariable=self.select_pos2)
        self.left1_dropdown.grid(row=1, column=1)

        self.draw_field2 = tk.Frame(self.field_frame, padx=10, pady=10, bg=background_color,
                                    highlightbackground="black", highlightthickness=5)
        self.draw_field2.grid(row=2, column=2)

        # GOAL BOX
        self.select_pos1 = tk.StringVar(value='-')
        self.middle1_dropdown = ttk.Combobox(self.draw_field2,
                                             values=["Sarah Wade", "Georgie Furnell", "Maire", "Jordan Campbell", "Chloe Mattock", "Ella Johns", "Stevie Bos", "Anisha Bowyer", "Bella Ives", "Penny Lovegrove", "Lucea Bedford", "Anne Moores", "Ruby", "Paige Bootle", "Georgia Tindle", "Natalia", "Brooke"],
                                             postcommand=players, state="readonly", width=10, textvariable=self.select_pos1)
        self.middle1_dropdown.grid(row=1, column=1)

        self.draw_field3 = tk.Frame(self.field_frame, padx=10, pady=10, bg=background_color)
        self.draw_field3.grid(row=2, column=3)

        self.select_pos3 = tk.StringVar(value='-')
        self.right1_dropdown = ttk.Combobox(self.draw_field3,
                                            values=["Sarah Wade", "Georgie Furnell", "Maire", "Jordan Campbell", "Chloe Mattock", "Ella Johns", "Stevie Bos", "Anisha Bowyer", "Bella Ives", "Penny Lovegrove", "Lucea Bedford", "Anne Moores", "Ruby", "Paige Bootle", "Georgia Tindle", "Natalia", "Brooke"],
                                            postcommand=players, state="readonly", width=10, textvariable=self.select_pos3)
        self.right1_dropdown.grid(row=1, column=1)

        # second row
        self.draw_field1 = tk.Frame(self.field_frame, padx=10, pady=10, bg=background_color,
                                    highlightbackground="#00cc00", highlightthickness=5)
        self.draw_field1.grid(row=3, column=1)

        self.select_pos4 = tk.StringVar(value='-')
        self.left2_dropdown = ttk.Combobox(self.draw_field1,
                                           values=["Sarah Wade", "Georgie Furnell", "Maire", "Jordan Campbell", "Chloe Mattock", "Ella Johns", "Stevie Bos", "Anisha Bowyer", "Bella Ives", "Penny Lovegrove", "Lucea Bedford", "Anne Moores", "Ruby", "Paige Bootle", "Georgia Tindle", "Natalia", "Brooke"],
                                           postcommand=players, state="readonly", width=10, textvariable=self.select_pos4)
        self.left2_dropdown.grid(row=1, column=1)

        self.draw_field2 = tk.Frame(self.field_frame, padx=10, pady=10, bg=background_color,
                                    highlightbackground="#00cc00", highlightthickness=5)
        self.draw_field2.grid(row=3, column=2)

        self.select_pos5 = tk.StringVar(value='-')
        self.middle2_dropdown = ttk.Combobox(self.draw_field2,
                                             values=["Sarah Wade", "Georgie Furnell", "Maire", "Jordan Campbell", "Chloe Mattock", "Ella Johns", "Stevie Bos", "Anisha Bowyer", "Bella Ives", "Penny Lovegrove", "Lucea Bedford", "Anne Moores", "Ruby", "Paige Bootle", "Georgia Tindle", "Natalia", "Brooke"],
                                             postcommand=players, state="readonly", width=10, textvariable=self.select_pos5)
        self.middle2_dropdown.grid(row=1, column=1)

        self.draw_field3 = tk.Frame(self.field_frame, padx=10, pady=10, bg=background_color, highlightbackground="#00cc00", highlightthickness=5)
        self.draw_field3.grid(row=3, column=3)

        self.select_pos6 = tk.StringVar(value='-')
        self.right2_dropdown = ttk.Combobox(self.draw_field3,
                                           values=["Sarah Wade", "Georgie Furnell", "Maire", "Jordan Campbell", "Chloe Mattock", "Ella Johns", "Stevie Bos", "Anisha Bowyer", "Bella Ives", "Penny Lovegrove", "Lucea Bedford", "Anne Moores", "Ruby", "Paige Bootle", "Georgia Tindle", "Natalia", "Brooke"],
                                           postcommand=players, state="readonly", width=10, textvariable=self.select_pos6)
        self.right2_dropdown.grid(row=1, column=1)

        # third row
        self.draw_field1 = tk.Frame(self.field_frame, padx=10, pady=10, bg=background_color,
                                    highlightbackground="#00cc00", highlightthickness=5)
        self.draw_field1.grid(row=4, column=1)

        self.select_pos7 = tk.StringVar(value='-')
        self.left3_dropdown = ttk.Combobox(self.draw_field1,
                                           values=["Sarah Wade", "Georgie Furnell", "Maire", "Jordan Campbell", "Chloe Mattock", "Ella Johns", "Stevie Bos", "Anisha Bowyer", "Bella Ives", "Penny Lovegrove", "Lucea Bedford", "Anne Moores", "Ruby", "Paige Bootle", "Georgia Tindle", "Natalia", "Brooke"],
                                           postcommand=players, state="readonly", width=10, textvariable=self.select_pos7)
        self.left3_dropdown.grid(row=1, column=1)

        self.draw_field2 = tk.Frame(self.field_frame, padx=10, pady=10, bg=background_color,
                                    highlightbackground="#00cc00", highlightthickness=5)
        self.draw_field2.grid(row=4, column=2)

        self.select_pos8 = tk.StringVar(value='-')
        self.middle3_dropdown = ttk.Combobox(self.draw_field2,
                                             values=["Sarah Wade", "Georgie Furnell", "Maire", "Jordan Campbell", "Chloe Mattock", "Ella Johns", "Stevie Bos", "Anisha Bowyer", "Bella Ives", "Penny Lovegrove", "Lucea Bedford", "Anne Moores", "Ruby", "Paige Bootle", "Georgia Tindle", "Natalia", "Brooke"],
                                             postcommand=players, state="readonly", width=10, textvariable=self.select_pos8)
        self.middle3_dropdown.grid(row=1, column=1)

        self.draw_field3 = tk.Frame(self.field_frame, padx=10, pady=10, bg=background_color, highlightbackground="#00cc00", highlightthickness=5)
        self.draw_field3.grid(row=4, column=3)

        self.select_pos9 = tk.StringVar(value='-')
        self.right3_dropdown = ttk.Combobox(self.draw_field3,
                                            values=["Sarah Wade", "Georgie Furnell", "Maire", "Jordan Campbell", "Chloe Mattock", "Ella Johns", "Stevie Bos", "Anisha Bowyer", "Bella Ives", "Penny Lovegrove", "Lucea Bedford", "Anne Moores", "Ruby", "Paige Bootle", "Georgia Tindle", "Natalia", "Brooke"],
                                            postcommand=players, state="readonly", width=10, textvariable=self.select_pos9)
        self.right3_dropdown.grid(row=1, column=1)

        # fourth row
        self.draw_field1 = tk.Frame(self.field_frame, padx=10, pady=10, bg=background_color,
                                    highlightbackground="#00cc00", highlightthickness=5)
        self.draw_field1.grid(row=5, column=1)

        self.select_pos10 = tk.StringVar(value='-')
        self.left4_dropdown = ttk.Combobox(self.draw_field1,
                                           values=["Sarah Wade", "Georgie Furnell", "Maire", "Jordan Campbell", "Chloe Mattock", "Ella Johns", "Stevie Bos", "Anisha Bowyer", "Bella Ives", "Penny Lovegrove", "Lucea Bedford", "Anne Moores", "Ruby", "Paige Bootle", "Georgia Tindle", "Natalia", "Brooke"],
                                           postcommand=players, state="readonly", width=10, textvariable=self.select_pos10)
        self.left4_dropdown.grid(row=1, column=1)

        self.draw_field2 = tk.Frame(self.field_frame, padx=10, pady=10, bg=background_color,
                                    highlightbackground="#00cc00", highlightthickness=5)
        self.draw_field2.grid(row=5, column=2)

        self.select_pos11 = tk.StringVar(value='-')
        self.middle4_dropdown = ttk.Combobox(self.draw_field2,
                                             values=["Sarah Wade", "Georgie Furnell", "Maire", "Jordan Campbell", "Chloe Mattock", "Ella Johns", "Stevie Bos", "Anisha Bowyer", "Bella Ives", "Penny Lovegrove", "Lucea Bedford", "Anne Moores", "Ruby", "Paige Bootle", "Georgia Tindle", "Natalia", "Brooke"],
                                             postcommand=players, state="readonly", width=10, textvariable=self.select_pos11)
        self.middle4_dropdown.grid(row=1, column=1)

        self.draw_field3 = tk.Frame(self.field_frame, padx=10, pady=10, bg=background_color, highlightbackground="#00cc00", highlightthickness=5)
        self.draw_field3.grid(row=5, column=3)

        self.select_pos12 = tk.StringVar(value='-')
        self.right4_dropdown = ttk.Combobox(self.draw_field3,
                                            values=["Sarah Wade", "Georgie Furnell", "Maire", "Jordan Campbell", "Chloe Mattock", "Ella Johns", "Stevie Bos", "Anisha Bowyer", "Bella Ives", "Penny Lovegrove", "Lucea Bedford", "Anne Moores", "Ruby", "Paige Bootle", "Georgia Tindle", "Natalia", "Brooke"],
                                            postcommand=players, state="readonly", width=10, textvariable=self.select_pos12)
        self.right4_dropdown.grid(row=1, column=1)

        teamPosList = ["not used", "empty", "empty", "empty", "empty", "empty", "empty", "empty", "empty", "empty", "empty", "empty", "empty"]
        self.select_team_button = Button(self.coach_page_frame, text="Select", command=lambda: self.export(teamPosList))
        self.select_team_button.grid(row=3)

        def update_positions(event):
            # could make a list for this or loop to simplify
            teamPosList[1] = self.select_pos1.get()
            teamPosList[2] = self.select_pos2.get()
            teamPosList[3] = self.select_pos3.get()
            teamPosList[4] = self.select_pos4.get()
            teamPosList[5] = self.select_pos5.get()
            teamPosList[6] = self.select_pos6.get()
            teamPosList[7] = self.select_pos7.get()
            teamPosList[8] = self.select_pos8.get()
            teamPosList[9] = self.select_pos9.get()
            teamPosList[10] = self.select_pos10.get()
            teamPosList[11] = self.select_pos11.get()
            teamPosList[12] = self.select_pos12.get()
            # print('Updated')
            # print(f"list:{teamPosList}")

        self.middle1_dropdown.bind('<<ComboboxSelected>>', update_positions)
        self.left1_dropdown.bind('<<ComboboxSelected>>', update_positions)
        self.right1_dropdown.bind('<<ComboboxSelected>>', update_positions)
        self.left2_dropdown.bind('<<ComboboxSelected>>', update_positions)
        self.middle2_dropdown.bind('<<ComboboxSelected>>', update_positions)
        self.right2_dropdown.bind('<<ComboboxSelected>>', update_positions)
        self.left3_dropdown.bind('<<ComboboxSelected>>', update_positions)
        self.middle3_dropdown.bind('<<ComboboxSelected>>', update_positions)
        self.right3_dropdown.bind('<<ComboboxSelected>>', update_positions)
        self.left4_dropdown.bind('<<ComboboxSelected>>', update_positions)
        self.middle4_dropdown.bind('<<ComboboxSelected>>', update_positions)
        self.right4_dropdown.bind('<<ComboboxSelected>>', update_positions)

# if any = " " then error = team is not completed
    def export(self, teamPosList):
        for item in teamPosList:
            if item == '-':
                contmessage = "Your team is not complete!"
                print(contmessage)
                # self.select_team_button.config(state=DISABLED)
            else:
                contmessage = "The positions are listed below"
                # enable select button
                self.select_team_button.config(state=NORMAL)
                print(contmessage)
        Export(self, contmessage, teamPosList)


class Export:
    def __init__(self, partner, contmessage, teamPosList):
        background = "orange"
        # disable export button
        #partner.select_team_button.config(state=DISABLED)

        # set up child window (i.e. export box)
        self.export_box = Toplevel()

        # set up GUI frame
        self.export_frame = Frame(self.export_box, width=300, bg=background)
        self.export_frame.grid()

        # set up export heading (row 0)
        self.how_heading = Label(self.export_frame, text="Team Selected",
                                 font="Garamond 14 bold", bg=background)
        self.how_heading.grid(row=0)

        n = 0
        for itemlist in teamPosList:
            teamtext = f'Position {n}: {teamPosList[n]}'
            print(teamtext)
            # names text (label, row 1)
            self.teamplay_text = Label(self.export_frame, text=teamtext,
                                       justify=LEFT, bg="#00cc00",
                                       fg="white",
                                       font="arial 10 italic", width=25)
            self.teamplay_text.grid(rowspan=13)
            n += 1


        # export text (label, row 1)
        self.export_text = Label(self.export_frame, text=contmessage,
                            justify=LEFT, bg="white",
                            fg="red", wrap=225, padx=10, pady=10,
                            font="arial 10 italic", width=50)
        self.export_text.grid(row=1)



if __name__ == "__main__":
    gameplay = GamePlay()
    gameplay.geometry("500x900")
    gameplay.title("GamePlay")
    gameplay.mainloop()




